[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'
on_cmd = 'DeinUpdate'

[[plugins]]
repo = 'haya14busa/dein-command.vim'
on_cmd = 'Dein'

# Interface
[[plugins]]
repo = 'rakr/vim-one'
hook_source = '''
syntax on
color one
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline={}
let g:lightline.colorscheme='one'
let g:lightline.enable={'statusline': 1, 'tabline': 1}
let g:lightline.component={'lineinfo': '%2l/%2L:%2v'}
let g:lightline.active={}
let g:lightline.active.right=[['lineinfo'], ['fileformat', 'fileencoding', 'filetype']]
let g:lightline.active.left=[['mode', 'paste'], ['readonly', 'relativepath', 'modified']]
'''

# Fuzzy Finder
[[plugins]]
repo = 'junegunn/fzf'
merged = 0
lazy = 1
on_cmd = ['FZF', 'FZF!']
hook_add = '''
let g:fzf_action={
	\'ctrl-t': 'tab split',
	\'ctrl-j': 'split',
	\'ctrl-l': 'vsplit'
\}
let g:fzf_layout = {'window': '15new'}
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }
augroup fzf_statuslist
	au!
	au FileType fzf set laststatus=0 noruler
				\| au BufLeave <buffer> set laststatus=2 showmode ruler
augroup END
'''

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
on_cmd = ['Buffers', 'Files', 'Rg', 'Lines', 'BTags', 'Maps']
hook_add = '''
nnoremap <leader>b :Buffers<CR>
nnoremap <leader>p :Files<CR>
nnoremap <leader>f :Rg<Space>
nnoremap <leader>/ :Lines<CR>
nnoremap <leader>n :BTags<CR>
'''

# Utils
[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
nmap R <Plug>(operator-replace)
'''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-repeat'
on_map = '.'

[[plugins]]
repo = 'tpope/vim-commentary'
on_map = 'gc'

[[plugins]]
repo = 'lambdalisue/suda.vim'
on_event = 'BufRead'
hook_add = '''
let g:suda_smart_edit=1
'''

[[plugins]]
repo = 'haya14busa/is.vim'
on_map = '/'
hook_add = '''
let g:is#do_default_mappings = 1
'''

[[plugins]]
repo = 'matze/vim-move'
on_map = ['C-h', 'C-j', 'C-k', 'C-l']
hook_add = '''
let g:move_key_modifier = 'C'
'''

# Syntax Highlighting
[[plugins]]
repo = 'sheerun/vim-polyglot'
build = './build'
hook_add = '''
let g:polyglot_disabled = ['latex']
'''
