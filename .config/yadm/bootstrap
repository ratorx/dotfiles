#! /bin/bash
# This script is run on every pull; this synchronises the system between multiple users on state not managed by yadm (such as /etc configuration).
# The effects of this script should be idempotent and take a system in any state (including an old version of the bootstrapped state) and configure it to the most up-to-date bootstrap state.
function service() {
	case "$1" in
		install)
			# ownership transfer to prevent hijack
			[ ! -f "/etc/systemd/system/$(basename "$2")" ] && sudo chown -R root:root "$2" && sudo -s ln -s "$2" /etc/systemd/system
			sudo systemctl enable "$(basename "$2")"
			;;
		uninstall)
			sudo systemctl disable "$2"
			[ -f "/etc/systemd/system/$2" ] && sudo rm "/etc/systemd/system/$2"
			;;
	esac
}

function exists() {
	command -v "$1" >/dev/null 2>&1
}

function is_laptop() {
	# Directory does not exist or is empty
	[ ! -d /sys/class/power_supply ] && return 1;
	[ -z "$(ls -A /sys/class/power_supply)" ] && return 1;
	for filename in /sys/class/power_supply/*/type; do
		[ "$(cat "$filename")" = "Battery" ] && return 0
	done
	return 1
}

function msg() {
	echo -e "\n\t" "$@" "\n"
}

function root_install {
	sudo -s mkdir -p "$3"
	local dest_file
	dest_file="$3/$(basename "$2")"
	if [ -f "$dest_file" ] || [ -h "$dest_file" ]; then
		sudo rm "$dest_file"
	elif [ -e "$dest_file" ]; then
		# Don't handle directory to minimise damage if script is called incorrectly
		echo "Directory or special file at $dest_file: delete before bootstrap"
		exit 1
	fi
	echo "$@"
	case "$1" in
		cp) sudo -s cp "$2" "$3" ;;
		ln)
			# ownership transfer to prevent hijack
			sudo chown -R root:root "$2"
			sudo -s ln -s "$2" "$3"
			;;
	esac
}

# trash-cli
exists trash-empty && systemctl --user enable --now trash-empty@2.timer

# pacman hooks
if exists pacman; then
	root_install ln "$XDG_CONFIG_HOME/yadm/pacman/hooks" "/etc/pacman.d"
	sudo sed -ibak \
		-e "s/^#Color$/Color/" \
		-e "s/^#VerbosePkgLists$/VerbosePkgLists/" \
		/etc/pacman.conf
fi

# backlight
if is_laptop; then
	service install "$XDG_CONFIG_HOME/yadm/backlight/backlight.service"
	root_install cp "$XDG_CONFIG_HOME/yadm/backlight/backlight" "/usr/bin"
	root_install cp "$XDG_CONFIG_HOME/yadm/backlight/90-powersave.rules" "/etc/udev/rules.d"
fi

# polybar vpn hook
exists polybar && exists nmcli && root_install cp "$XDG_CONFIG_HOME/polybar/scripts/polybar-vpn" "/etc/NetworkManager/dispatcher.d"

# gui setup
if exists startx; then
	root_install cp "$XDG_CONFIG_HOME/yadm/xorg/override.conf" "/etc/systemd/system/getty@tty1.service.d/"
	exists xgetres && systemctl --user enable --now wallpaper@daily.timer
fi

# yadm
case "$(hostname)" in
	poseidon) yadm config local.class laptop ;;
	zeus) yadm config local.class desktop ;;
esac

if exists yadm; then
	# Ignore SSH config to allow gcloud changes to be ignored
	yadm update-index --assume-unchanged "$HOME/.ssh/config"
	# Remove README (edit on GitHub)
	yadm update-index --assume-unchanged "$HOME/README.md"
	[ -f "$HOME/README.md" ] && rm "$HOME/README.md"
	# Generate templated files
	yadm alt
	# Alias a to ignore untracked files
	yadm gitconfig alias.a "add -u"
fi

