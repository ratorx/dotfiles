# vi keys
setw -g mode-keys vi

# mouse support
set-option -g mouse on
bind -n WheelUpPane if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' 'if-shell -Ft= "#{alternate_on}" \
        "send -t= Up" "copy-mode -et="'
bind -n WheelDownPane if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' 'if-shell -Ft= "#{alternate_on}" \
        "send -t= Down" "send -Mt="'
bind -T copy-mode-vi WheelUpPane send -N1 -X scroll-up
bind -T copy-mode-vi WheelDownPane send -N1 -X scroll-down

# don't start as login shell
set -g default-command "${SHELL}"

# make tmux display things in 256 colors
set -g default-terminal "tmux-256color"
set -g xterm-keys on

# title
set -g set-titles on
set -g set-titles-string "#T"

# Kill session when detached
set -g destroy-unattached on

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# change prefix
unbind C-b
set -g prefix C-Space
# use send-prefix to pass C-Space through to application
bind Space send-prefix

# statusbar toggle
bind b set status

# unbind ESC window switch
unbind -n Escape

# shorten command delay
set -sg escape-time 1

# aggressive resize
setw -g aggressive-resize on

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Config reloaded"

# copy mode
unbind-key [
unbind-key ]
bind-key Enter copy-mode
bind-key -n C-v paste-buffer
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel

# pane splits
unbind "\""
unbind %
bind Left  split-window -h -c "#{pane_current_path}" \; swap-pane -t {left-of}  \; select-pane -t '!'
bind Down  split-window -v -c "#{pane_current_path}"
bind Up    split-window -v -c "#{pane_current_path}" \; swap-pane -t {up-of}    \; select-pane -t '!'
bind Right split-window -h -c "#{pane_current_path}"
# pane swaps
unbind -n M-}
unbind -n M-{
unbind -n M-]
unbind -n M-[
bind -n C-Left  swap-pane -t {left-of}  \; select-pane -t '!'
bind -n C-Down  swap-pane -t {down-of}  \; select-pane -t '!'
bind -n C-Up    swap-pane -t {up-of}    \; select-pane -t '!'
bind -n C-Right swap-pane -t {right-of} \; select-pane -t '!'
# pane movement
bind -n M-Left  select-pane -L
bind -n M-Down  select-pane -D
bind -n M-Up    select-pane -U
bind -n M-Right select-pane -R
# pane resize
bind C-Left  resize-pane -L 5
bind C-Down  resize-pane -D 5
bind C-Up    resize-pane -U 5
bind C-Right resize-pane -R 5
# pane layout
bind v select-layout main-horizontal
bind h select-layout main-vertical

# swap window with first
bind T swap-window -t 0
# window movement
unbind -n M-1
unbind -n M-2
unbind -n M-3
unbind -n M-4
# kill window
bind X kill-window
# create window
bind c new-window \; set status on

# pane synchronisation
bind a setw synchronize-pane \; set status on
# window maximise
bind m resize-pane -Z \; setw synchronize-pane off \; set status on # Easier than using synchronize-pane logic
unbind z

# style
# pane
set -g pane-border-fg colour15
set -g pane-active-border-fg colour15
# messaging
set -g message-style "fg=default,bg=default"
set -g automatic-rename on
# window indicator
setw -g mode-fg black
setw -g mode-bg blue
# status line
set -g status-justify left
set -g status-fg default
set -g status-bg default
setw -g window-status-format "#[fg=colour8] #W "
setw -g window-status-current-format "#[fg=colour4] •#[fg=colour7] #W "
set -g status-position bottom
set -g status-justify centre
set -g status-left " #{?client_prefix,#[fg=colour5]•••,   }"
set -g status-right "#{?window_zoomed_flag,#[fg=colour2]•••,#{?pane_synchronized,#[fg=colour4]•••,   }} "
set -g status-interval 1

set -g status off
